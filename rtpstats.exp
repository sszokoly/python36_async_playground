#!/usr/bin/expect
log_user 0
exp_internal 0

# Set variables
set timeout 2
set host "10.10.48.58"
set user "root"
set passwd "cmb@Dm1n"
set begindelim "#BEGIN\n"
set enddelim "\n#END"
set continue "\r\n--type q to quit or space key to continue-- \r\[^ \]*"
set denied "*Permission denied*"
set done "Done!.*"
set footer "Note that field.*"
set more "*continue-- "
set prompt "\)# "
set session_ids {00001 00016}

proc merge_lists {list1 list2} {
    set combined [concat $list1 $list2]
    set unique [lsort -unique $combined]
    set result [lsort -integer $unique]
    return $result
}

proc cmd {command} {
    global begindelim enddelim more prompt done
    set output $begindelim
    set err 0
    send $command
    expect {
        $more {
            set current_output $expect_out(buffer)
            append output $current_output
            send "\n"
            exp_continue
        }
        $prompt {  
            set current_output $expect_out(buffer)
            append output $current_output
        }
        timeout { set err 255 }
    }
    set cleaned_output [regsub "Done!.*" $output ""]
    set result [string trimright $cleaned_output]
    append result $enddelim
    return [list $result $err]
}

proc active_sessions_ids {} {
    global cmd continue
    set command "show rtp-stat sessions last 3\n"
    lassign [cmd $command] output err
    set cleaned_output [regsub $continue $output ""]
    set active_session_ids [list]
    if {$err == 0} {
        foreach line [split $cleaned_output "\n"] {
            if {[regexp {^\s*(\d+)} $line match number]} {
                lappend active_session_ids $number
            }
        }
    }
    return $active_session_ids
}

# Spawn SSH connection
spawn ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=$timeout $user@$host

# Handle SSH connection
expect {
    "Password: " {send "$passwd\n"}
    timeout {puts stderr "Timeout"; exit 255}
    eof {puts stderr "Timeout" ; exit 255}
}
expect {
    $denied {puts stderr "Permission denied"; exit 255}
    $prompt {}
}

# Loop through session ids and run 'show rtp-stats details id' on it
set active_ids [active_sessions_ids]
set merged_ids [merge_lists $active_ids $session_ids]
foreach id $merged_ids {
    set command "show rtp-stat detailed $id\n"
    lassign [cmd $command] output err
    if {$err == 0} {
        log_user 1
        puts $output
        log_user 0
    } else {puts stderr "Error"; exit $err}
}

# Exit the SSH session
send "exit\n"
