#!/usr/bin/expect

# Set variables
set timeout 2
set host "10.10.48.58"
set user "root"
set passwd "cmb@Dm1n"
set prompt "\)# "
set more "*continue-- "
set processing "*Processing another command please wait.*"
set footer "Note that field.*"
set done "Done!.*"
set pattern "\r\n--type q to quit or space key to continue-- \r\[^ \]*"

# Spawn SSH connection
log_user 0
exp_internal 0
spawn ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=$timeout $user@$host

# Handle SSH connection
expect {
    "Password: " { send "$passwd\n" }
    timeout {
        puts stderr "Timeout"
        exit 255
    }
    eof {
        #catch wait result
        puts stderr "Timeout"
        exit 255
    }
}

expect {
    "*Permission denied*" {
        puts stderr "Permission denied"
        exit 255
        }
    $prompt
}

# Run 'show rtp-stats sessions' command
set timeout 6
set output ""
send "show rtp-stat sessions last 5\n"
expect {
    $more {
        set current_output $expect_out(buffer)
        #puts "\n#CURRENT"
        #puts $current_output
        append output $current_output
        send "\n"
        exp_continue
    }
    $prompt {
        set current_output $expect_out(buffer)
        #puts "\n#LAST"
        #puts $current_output
        if { [regexp {Processing another} $current_output ignore ] } { 
            puts stderr "Processing another command"
            exit 254
        }
        set cleaned_output [regsub $footer $current_output ""]
        append output $cleaned_output
    }
    timeout {
        puts stderr "Timeout"
        exit 255
    }
}

# Clean and print output
set cleaned_output [regsub $pattern $output ""]
set trimmed_output [string trimright $cleaned_output]
log_user 1
puts "#BEGIN"
puts $trimmed_output
puts "#END"
log_user 0

# Process the output to extract session numbers
set session_numbers [list]
foreach line [split $output "\n"] {
    if {[regexp {^\s*(\d+)} $line match number]} {
        lappend session_numbers $number
    }
}

# Loop through each session number and print 'show rtp-stats details id'
set timeout 2
foreach session $session_numbers {
    set output ""
    send "show rtp-stat detailed $session\n"
    expect {
        $more {
            set current_output $expect_out(buffer)
            #puts "\n#CURRENT"
            #puts $current_output
            append output $current_output
            send "\n"
            exp_continue
        }
        $prompt {  
            set current_output $expect_out(buffer)
            #puts "\n#LAST"
            #puts $current_output
            if { [regexp {Processing another} $current_output ignore ] } { 
                puts stderr "Processing another command"
                exit 254
            }
            set cleaned_output [regsub $done $current_output ""]
            append output $cleaned_output
        }
        timeout {
            puts stderr "Timeout"
            exit 255
        }
    }
    set trimmed_output [string trimright $output]
    log_user 1
    puts "#BEGIN"
    puts $trimmed_output
    puts "#END"
    log_user 0
}

# Exit the SSH session
send "exit\n"
