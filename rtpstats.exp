#!/usr/bin/expect

# Set variables
set timeout 2
set host "10.10.48.58"
set user "root"
set passwd "cmb@Dm1n"
set continue "\r\n--type q to quit or space key to continue-- \r\[^ \]*"
set denied "*Permission denied*"
set done "Done!.*"
set footer "Note that field.*"
set more "*continue-- "
set processing "*Processing another command please wait.*"
set prompt "\)# "

# Spawn SSH connection
log_user 0
exp_internal 0
spawn ssh -q -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=$timeout $user@$host

# Handle SSH connection
expect {
    "Password: " { send "$passwd\n" }
    timeout { puts stderr "Timeout"; exit 255 }
    eof { puts stderr "Timeout" ; exit 255 }
}
expect {
    $denied { puts stderr "Permission denied"; exit 255 }
    $prompt {}
}

# Run 'show rtp-stats sessions last 5' command
set output ""
send "show rtp-stat sessions last 5\n"
expect {
    $more {
        set current_output $expect_out(buffer)
        append output $current_output
        send "\n"
        exp_continue
    }
    $prompt {
        set current_output $expect_out(buffer)
        set cleaned_output [ regsub $footer $current_output "" ]
        append output $cleaned_output
    }
    timeout {
        puts stderr "Timeout"
        exit 255
    }
}

# Clean and print output
set cleaned_output [ regsub $continue $output "" ]
set trimmed_output [ string trimright $cleaned_output ]
log_user 1
puts "#BEGIN"
puts $trimmed_output
puts "#END"
log_user 0

# Process the output to extract session numbers
set session_ids [ list ]
foreach line [ split $output "\n" ] {
    if { [ regexp {^\s*(\d+)} $line match number ] } {
        lappend session_ids $number
    }
}

# Loop through each session number and print 'show rtp-stats details id'
foreach session $session_ids {
    set output ""
    send "show rtp-stat detailed $session\n"
    expect {
        $more {
            set current_output $expect_out(buffer)
            append output $current_output
            send "\n"
            exp_continue
        }
        $prompt {  
            set current_output $expect_out(buffer)
            set cleaned_output [ regsub $done $current_output "" ]
            append output $cleaned_output
        }
        timeout { puts stderr "Timeout"; exit 255 }
    }
    set trimmed_output [string trimright $output]
    log_user 1
    puts "#BEGIN"
    puts $trimmed_output
    puts "#END"
    log_user 0
}

# Exit the SSH session
send "exit\n"
